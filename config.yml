repositories:
  base:
    url: https://github.com/JanVogelsang/CI-Bennch-config.git
    branch: root
extends:
  repo: base
  config_file: config.yml
benchmarks:
  hpc_benchmark:
    machine_parameters:
      jureca:
        num_nodes: "1"
        tasks_per_node: "2"
        threads_per_task: "64"
        walltime: "00:01:00"
      jusuf:
        num_nodes: "1"
        tasks_per_node: "2"
        threads_per_task: "64"
        walltime: "00:01:00"
      model_parameters:
        - {name: model_time_sim, type: float, _: "90."}        # biological time to be simulated in ms
        - {name: model_time_presim, type: float, _: "10."}     # presimulation time for avoiding initial transients in ms
        - {name: scale_N, type: float, _: "0.01"}                 # scaling the number of neurons, 1. -> original model
        - {name: rng_seed, type: int, _: "42"}                  # rng seed for NEST, accepts a list in the format a,b,c,... for generating multiple runs
        - {name: scaling_type, type: string, _: "strong"}       # can be either weak or strong
  microcircuit:
    machine_parameters:
      jureca:
        num_nodes: "1"
        tasks_per_node: "2"
        threads_per_task: "64"
        walltime: "00:01:00"
      jusuf:
        num_nodes: "1"
        tasks_per_node: "2"
        threads_per_task: "64"
        walltime: "00:01:00"
    model_parameters:
      - {name: net_params, type: string, _: "network_params.py"}  # default network parameters
      - {name: scale_N, type: float, _: "0.01"}  # scaling the number of neurons, 1. -> original model
      - {name: scale_K, type: float, _: "0.01"}  # scaling the indegree, 1. -> original model
      - {name: poisson_input, type: string, _: "False"}  # choose Poisson or DC input
      - {name: V0_type, type: text, _: "'optimized'"}  # choose default or optimized initial conditions for the membrane potential
      - {name: synapse_type, type: text, _: "'static_synapse'"}  # type of synapses in the model
      - {name: sim_params, type: string, _: "sim_params.py"}  # default simulation parameters
      - {name: model_time_sim, type: float, _: "100."}  # biological time to be simulated in ms
      - {name: model_time_presim, type: float, _: "50."}  # in ms
      - {name: rng_seed, type: int, _: "55"}  # rng seed
      - {name: record_spikes, type: string, _: ""}  # change to 'spike_recorder' for spike recordings
      - {name: kwds, separator: ;, type: string, _: "{}"}  # can be used for passing arguments to SetKernelStatus, such as max_buffer_size_spike_data. If no arguments should be passed leave this empty. If something should be passed insert a dictionary, eg: {'max_buffer_size_spike_data': 10}
      - {name: scaling_type, type: string, _: "strong"}  # can be either weak or strong
  multi_area:
    machine_parameters:
      jureca:
        num_nodes: "4"
        tasks_per_node: "2"
        threads_per_task: "64"
        walltime: "01:00:00"
      jusuf:
        num_nodes: "4"
        tasks_per_node: "2"
        threads_per_task: "64"
        walltime: "01:00:00"
    model_parameters:
      - {name: network_state, type: string, _: "metastable"}  # can be either "metastable" or "ground"
      - {name: record_spikes, type: string, _: "False"}  # whether to write spiking output to file, either True or False
      - {name: model_time_sim, type: float, _: "10."}  # biological time to be simulated in ms
      - {name: model_time_presim, type: float, _: "5."}  # presimulation time for avoiding initial transients in ms
      - {name: scale_N, type: float, _: "0.01"}  # scaling the number of neurons, 1. -> original model
      - {name: scale_K, type: float, _: "0.01"}  # scaling the indegree, 1. -> original model
      - {name: rng_seed, type: int, _: "55"}  # rng seed for NEST, accepts a list in the format a,b,c,... for generating multiple runs
      - {name: scaling_type, type: string, _: "strong"}  # can be either weak or strong
user_config:
  jureca:
    account: "jinb33"  # slurm account name for job submission
    partition: "dc-cpu"  # cluster partition, takes system default if left empty
  jusuf:
    account:  "icei-hbp-2020-0005"
    partition: "batch"
