machines:
  jureca: "jureca.yml"
model_parameters:
  - {name: model_name, type: string, _: "microcircuit"}  # for identifying the model, can be any unique string
  - {name: net_params, type: string, _: "network_params.py"}  # default network parameters
  - {name: scale_N, type: float, _: "1."}  # scaling the number of neurons, 1. -> original model
  - {name: scale_K, type: float, _: "1."}  # scaling the indegree, 1. -> original model
  - {name: poisson_input, type: string, _: "False"}  # choose Poisson or DC input
  - {name: V0_type, type: text, _: "'optimized'"}  # choose default or optimized initial conditions for the membrane potential
  - {name: synapse_type, type: text, _: "'static_synapse'"}  # type of synapses in the model
  - {name: sim_params, _: sim_params.py}  # default simulation parameters
  - {name: model_time_sim, type: float, _: "1000."}  # biological time to be simulated in ms
  - {name: model_time_presim, _: "100."}  # in ms
  - {name: rng_seed, _: "55"}  # rng seed
  - {name: record_spikes, type: string, _: ""}  # change to 'spike_recorder' for spike recordings
  - {name: kwds, separator: ;, type: string, _: "{}"}  # can be used for passing arguments to SetKernelStatus, such as max_buffer_size_spike_data. If no arguments should be passed leave this empty. If something should be passed insert a dictionary, eg: {'max_buffer_size_spike_data': 10}
  - {name: scaling_type, _: "strong"}  # can be either weak or strong
run_parameters:
  log_path: "data"
metrics:
  - rng_seed
  - num_nodes
  - threads_per_task
  - tasks_per_node
  - model_time_sim
  - wall_time_create
  - wall_time_connect
  - wall_time_sim
  - wall_time_phase_collocate
  - wall_time_phase_communicate
  - wall_time_phase_deliver
  - wall_time_phase_update
  - wall_time_communicate_target_data
  - wall_time_gather_spike_data
  - wall_time_gather_target_data
  - wall_time_communicate_prepare
  - py_time_kernel_prepare
  - py_time_network_local
  - py_time_network_global
  - py_time_simulate
  - py_time_presimulate
  - py_time_network_prepare
  - py_time_create
  - py_time_connect_area
  - py_time_connect_cc
  - py_time_connect
metrics_sum:
  - base_memory
  - network_memory
  - init_memory
  - total_memory
  - num_connections
  - local_spike_counter